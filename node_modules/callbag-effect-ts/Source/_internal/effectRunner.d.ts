import * as T from "@effect/io/Effect";
import * as Cause from "@effect/io/Cause";
import { Runtime } from "@effect/io/Runtime";
export declare const make: <R, E>(r: Runtime<R>, onFail: (cause: Cause.Cause<E>) => void, capacity?: number) => {
    readonly runEffect: <A>(e: T.Effect<R, E, A>, cb?: ((a: A) => void) | undefined) => void;
    readonly abort: (cleanup?: T.Effect<never, never, void>) => void;
};
