import { createPipe } from "./createPipe.js";
export const delay_ = (self, delayMs) => (_, sink) => {
    let sourceEnded = false;
    let sourceError;
    const timeouts = new Set();
    function cleanup() {
        timeouts.forEach(clearTimeout);
        timeouts.clear();
    }
    function maybeEnd() {
        if (sourceEnded && timeouts.size === 0) {
            sink(2, sourceError);
        }
    }
    createPipe(self, sink, {
        onStart(s) {
            s.pull();
        },
        onRequest(s) {
            s.pull();
        },
        onData(_s, data) {
            const timeout = setTimeout(() => {
                sink(1, data);
                timeouts.delete(timeout);
                maybeEnd();
            }, delayMs);
            timeouts.add(timeout);
        },
        onEnd(err) {
            sourceEnded = true;
            sourceError = err;
            maybeEnd();
        },
        onAbort() {
            cleanup();
        },
    });
};
export const delay = (delayMs) => (self) => delay_(self, delayMs);
