import { Sink, Source } from "strict-callbag";
import { Emitter } from "./emitter.js";
type Cleanup = () => void;
type Register<E, A> = (sink: Sink<A, E>) => Cleanup | void;
export declare const asyncP: <A, E = unknown>(register: Register<E, A>) => Source<A, E>;
export declare const asyncSinkP: <A, E = unknown>() => readonly [sink: Sink<A, E, never>, source: Source<A, E>];
export declare const asyncEmitterP: <A, E = unknown>() => readonly [sink: Emitter<A, E>, source: Source<A, E>];
export {};
