import * as tsplus_module_1 from "dfx/common";
import * as tsplus_module_2 from "@effect/io/Layer";
import * as tsplus_module_3 from "@effect/io/Effect";
import { delayFrom } from "./utils.js";
import * as Memory from "./memory.js";
export const RateLimitStore = tsplus_module_1.Tag();
export const LiveMemoryRateLimitStore = tsplus_module_2.sync(RateLimitStore)(Memory.make);
const makeLimiter = tsplus_module_3.flatMap(store => tsplus_module_3.map(log => {
    const maybeWait = (key, window, limit, multiplier = 1.05) => {
        const windowMs = window.millis * multiplier;
        return tsplus_module_3.asUnit(tsplus_module_3.tap(tsplus_module_3.sleep)(tsplus_module_3.tap((d) => log.debug("RateLimitStore maybeWait", {
            key,
            window: window.millis,
            windowMs,
            limit,
            delay: d.millis,
        }))(tsplus_module_3.map(([count, ttl]) => delayFrom(windowMs, limit, count, ttl))(store
            .incrementCounter(key, windowMs, limit)))));
    };
    return { maybeWait };
})(tsplus_module_3.service(tsplus_module_1.Log.Log)))(tsplus_module_3.service(RateLimitStore));
export const RateLimiter = tsplus_module_1.Tag();
export const LiveRateLimiter = tsplus_module_2.fromEffect(RateLimiter)(makeLimiter);
//# sourceMappingURL=index.js.map