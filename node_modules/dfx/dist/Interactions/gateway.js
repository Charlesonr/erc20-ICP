import * as tsplus_module_1 from "@effect/io/Effect";
import * as tsplus_module_2 from "dfx/common";
import * as tsplus_module_3 from "@fp-ts/data/Option";
import * as tsplus_module_4 from "dfx/common-gateway";
import { handlers } from "./handlers.js";
import { splitDefinitions } from "./utils.js";
export const run = (catchAll, { sync = true } = {}) => (ix) => (() => {
    const { GlobalApplicationCommand, GuildApplicationCommand } = splitDefinitions(ix.definitions);
    return tsplus_module_1.flatMap(application => {
        const globalSync = tsplus_module_2.Rest.rest.bulkOverwriteGlobalApplicationCommands(application.id, {
            body: JSON.stringify(GlobalApplicationCommand.map((a) => a.command)),
        });
        const guildSync = GuildApplicationCommand.length
            ? tsplus_module_4.Gateway.handleDispatch("GUILD_CREATE", (a) => tsplus_module_2.Rest.rest.bulkOverwriteGuildApplicationCommands(application.id, a.id, GuildApplicationCommand.map((a) => a.command)))
            : tsplus_module_1.unit();
        const handle = handlers(ix.definitions);
        const run = tsplus_module_4.Gateway.handleDispatch("INTERACTION_CREATE", (i) => tsplus_module_1.catchAll(catchAll)(tsplus_module_1.tap((r) => tsplus_module_3.match(tsplus_module_1.unit, (r) => tsplus_module_2.Rest.rest.createInteractionResponse(i.id, i.token, r))(r))(handle[i.type](i))));
        return tsplus_module_1.map(() => void 0)(sync ? tsplus_module_1.zipPar(guildSync)(tsplus_module_1.zipPar(globalSync)(run)) : run);
    })(tsplus_module_1.flatMap((a) => a.json)(tsplus_module_2.Rest.rest.getCurrentBotApplicationInformation()));
})();
//# sourceMappingURL=gateway.js.map