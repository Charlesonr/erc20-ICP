import { Effect, Maybe } from "dfx/common";
export interface ClaimIdContext {
    sharderCount: number;
    totalCount: number;
}
export interface ShardStore {
    claimId: (ctx: ClaimIdContext) => Effect<never, never, Maybe<number>>;
    allClaimed: (totalCount: number) => Effect<never, never, boolean>;
    heartbeat?: (shardId: number) => Effect<never, never, void>;
}
export declare const ShardStore: import("../../common.js").Tag<ShardStore>;
export declare const LiveMemoryShardStore: import("../../common.js").Layer<never, never, ShardStore>;
//# sourceMappingURL=index.d.ts.map