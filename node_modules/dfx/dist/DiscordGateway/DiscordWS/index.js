import * as tsplus_module_1 from "dfx/common";
import * as tsplus_module_2 from "@effect/io/Layer";
import * as tsplus_module_3 from "dfx/common-gateway";
import * as tsplus_module_4 from "callbag-effect-ts/Sink/map";
import * as tsplus_module_5 from "@fp-ts/data/Duration";
import * as tsplus_module_6 from "@effect/io/Schedule";
import * as tsplus_module_7 from "callbag-effect-ts/Source/tapError";
import * as tsplus_module_8 from "callbag-effect-ts/Source/retry";
import * as tsplus_module_9 from "callbag-effect-ts/Source/map";
import * as tsplus_module_10 from "@effect/io/Effect";
import * as tsplus_module_11 from "@effect/io/Ref";
export const DiscordWSCodec = tsplus_module_1.Tag();
export const LiveJsonDiscordWSCodec = tsplus_module_2.succeed(DiscordWSCodec)({
    type: "json",
    encode: (p) => JSON.stringify(p),
    decode: (p) => JSON.parse(p.toString("utf8")),
});
export const make = ({ url = "wss://gateway.discord.gg/", version = 10, } = {}) => tsplus_module_10.flatMap(encoding => tsplus_module_10.flatMap(urlRef => {
    const setUrl = (url) => tsplus_module_11.set(`${url}?v=${version}&encoding=${encoding.type}`)(urlRef);
    return tsplus_module_10.flatMap(ws => tsplus_module_10.map(log => {
        const source = tsplus_module_9.map(encoding.decode)(tsplus_module_8.retry(tsplus_module_6.exponential(tsplus_module_5.seconds(0.5)))(tsplus_module_7.tapError((e) => log.info("DiscordWS", "ERROR", e))(ws.source)));
        const sink = tsplus_module_4.map((msg) => msg === tsplus_module_3.WS.Reconnect ? msg : encoding.encode(msg))(ws.sink);
        return { source, sink, setUrl };
    })(tsplus_module_10.service(tsplus_module_1.Log.Log)))(tsplus_module_3.WS.make(urlRef, { perMessageDeflate: false }));
})(tsplus_module_11.make(`${url}?v=${version}&encoding=${encoding.type}`)))(tsplus_module_10.service(DiscordWSCodec));
//# sourceMappingURL=index.js.map