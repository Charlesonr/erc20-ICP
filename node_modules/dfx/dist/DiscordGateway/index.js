import * as tsplus_module_1 from "callbag-effect-ts/Source/filter";
import * as tsplus_module_2 from "callbag-effect-ts/Source/map";
import * as tsplus_module_3 from "callbag-effect-ts/Source/fromEffect";
import * as tsplus_module_4 from "callbag-effect-ts/Source/chainPar";
import * as tsplus_module_5 from "callbag-effect-ts/Source/run";
import * as tsplus_module_6 from "callbag-effect-ts/Source/share";
import * as tsplus_module_7 from "@effect/io/Effect";
import * as tsplus_module_8 from "dfx/common";
import * as tsplus_module_9 from "@effect/io/Layer";
import { spawn } from "./Sharder/index.js";
const fromDispatchFactory = (source) => (event) => tsplus_module_2.map((p) => p.d)(tsplus_module_1.filter((p) => p.t === event)(source));
const handleDispatchFactory = (source) => (event, handle) => tsplus_module_5.runDrain(tsplus_module_4.chainPar((a) => tsplus_module_3.fromEffect(handle(a.d)))(tsplus_module_1.filter((p) => p.t === event)(source)));
export const make = tsplus_module_7.flatMap(shards => tsplus_module_7.flatMap(raw => tsplus_module_7.map(dispatch => {
    const fromDispatch = fromDispatchFactory(dispatch);
    const handleDispatch = handleDispatchFactory(dispatch);
    return {
        shards,
        raw,
        dispatch,
        fromDispatch,
        handleDispatch,
    };
})(tsplus_module_6.share(tsplus_module_4.chainPar((s) => s.dispatch)(shards))))(tsplus_module_6.share(tsplus_module_4.chainPar((s) => s.raw)(shards))))(tsplus_module_6.share(spawn));
export const DiscordGateway = tsplus_module_8.Tag();
export const LiveDiscordGateway = tsplus_module_9.fromEffect(DiscordGateway)(make);
export const handleDispatch = (event, handle) => tsplus_module_7.serviceWithEffect(DiscordGateway)((a) => a.handleDispatch(event, handle));
//# sourceMappingURL=index.js.map