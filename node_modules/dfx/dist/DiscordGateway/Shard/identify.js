import * as tsplus_module_1 from "@fp-ts/data/Option";
import * as tsplus_module_2 from "@effect/io/Ref";
import * as tsplus_module_3 from "@effect/io/Effect";
import * as tsplus_module_4 from "dfx/common";
import * as tsplus_module_5 from "callbag-effect-ts/Source/mapEffect";
import * as SendEvents from "./sendEvents.js";
import * as OS from "os";
import { opCode } from "./utils.js";
const identify = ({ token, intents, shard, presence }) => SendEvents.identify({
    token,
    intents,
    properties: {
        os: OS.platform(),
        browser: "dfx",
        device: "dfx",
    },
    shard,
    presence,
});
const resume = (token, ready, seq) => SendEvents.resume({
    token,
    session_id: ready.session_id,
    seq,
});
const identifyOrResume = (opts, ready, seq) => tsplus_module_3.flatMap(readyEvent => tsplus_module_3.map(seqNumber => tsplus_module_1.match(() => identify(opts), ({ readyEvent, seqNumber }) => resume(opts.token, readyEvent, seqNumber))(tsplus_module_1.struct({
    readyEvent,
    seqNumber,
})))(tsplus_module_2.get(seq)))(tsplus_module_2.get(ready));
export const fromRaw = (source, { latestReady, latestSequence, ...opts }) => tsplus_module_5.mapEffect(() => identifyOrResume(opts, latestReady, latestSequence))(opCode(source)(tsplus_module_4.Discord.GatewayOpcode.HELLO));
//# sourceMappingURL=identify.js.map